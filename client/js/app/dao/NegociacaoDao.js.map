{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCAEKC,a;AAET,uCAAYC,UAAZ,EAAwB;AAAA;;AAEpB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AACH;;;;6CAEQC,U,EAAY;AAAA;;AAEjB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,MAAKN,WAAL,CACLO,WADK,CACO,MAAKN,MADZ,EACoB,WADpB,EAELO,WAFK,CAEO,MAAKP,MAFZ,EAGLQ,GAHK,CAGDP,UAHC,CAAd;;AAKAI,oCAAQI,SAAR,GAAoB,aAAK;;AAErBN;AACH,6BAHD;;AAKAE,oCAAQK,OAAR,GAAkB,aAAK;;AAEnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAJD;AAMH,yBAlBM,CAAP;AAmBH;;;kDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACJO,WADI,CACQ,OAAKN,MADb,EACoB,WADpB,EAEJO,WAFI,CAEQ,OAAKP,MAFb,EAGJiB,UAHI,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,aAAK;;AAErB,oCAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,oCAAGD,KAAH,EAAS;;AAEL,wCAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;;AAEAP,0CAAMQ,QAAN;AACH,iCAPD,MAOK;AACDxB,4CAAQe,WAAR;AACH;AAEH,6BAfD;;AAiBAF,mCAAON,OAAP,GAAiB,aAAK;AAClBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAAT,CAAea,IAA3B;AACAxB,uCAAO,wCAAP;AACH,6BAHD;AAIH,yBA9BM,CAAP;AA+BH;;;kDAEY;AAAA;;AAET,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACbO,WADa,CACD,OAAKN,MADJ,EACW,WADX,EAEbO,WAFa,CAED,OAAKP,MAFJ,EAGb6B,KAHa,EAAd;;AAKAxB,oCAAQI,SAAR,GAAoB;AAAA,uCAAKN,QAAQ,oCAAR,CAAL;AAAA,6BAApB;;AAEAE,oCAAQK,OAAR,GAAkB,aAAK;AACnBC,wCAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAKH,yBAdM,CAAP;AAeH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\r\n\r\nexport class NegociacaoDao {\r\n\r\n    constructor(connection) {\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n    }\r\n\r\n    adiciona(negociacao) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n                    .transaction(this._store, 'readwrite')\r\n                    .objectStore(this._store)\r\n                    .add(negociacao);\r\n\r\n            request.onsuccess = e => {\r\n                \r\n                resolve();\r\n            };\r\n\r\n            request.onerror = e => {\r\n\r\n                console.log(e.target.error);\r\n                reject(\"Não foi possivel adicionar a negociacao\");\r\n            }\r\n\r\n        });\r\n    }\r\n    \r\n    listarTodos(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n           \r\n            let cursor = this._connection\r\n                    .transaction(this._store,'readwrite')\r\n                    .objectStore(this._store)\r\n                    .openCursor();\r\n\r\n            let negociacoes = [];\r\n        \r\n            cursor.onsuccess = e => {\r\n        \r\n               let atual = e.target.result;\r\n        \r\n               if(atual){\r\n        \r\n                   let dado = atual.value;\r\n                   \r\n                   negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n        \r\n                   atual.continue();\r\n               }else{\r\n                   resolve(negociacoes);\r\n               }\r\n        \r\n            };\r\n        \r\n            cursor.onerror = e => {\r\n                console.log(e.target.error.name);\r\n                reject(\"Não foi possível listar as negociações\");\r\n            };\r\n        });\r\n    }\r\n\r\n    apagarTodos(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            let request = this._connection\r\n            .transaction(this._store,'readwrite')\r\n            .objectStore(this._store)\r\n            .clear();\r\n\r\n            request.onsuccess = e => resolve('Negocicacoes removidas com sucesso');\r\n\r\n            request.onerror = e => {\r\n                console.log(e.target.error);\r\n                reject('Não foi possível remover as negociações')\r\n            };\r\n\r\n        })\r\n    }\r\n\r\n}"]}