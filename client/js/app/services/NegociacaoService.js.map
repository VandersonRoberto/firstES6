{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","Negociacao","ConnectionFactory","NegociacaoDao","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","dado","console","log","erro","Error","negociacao","getConnection","connection","dao","adiciona","listarTodos","apagarTodos","listaAtual","obterNegociacoes","filter","some","JSON","stringify","negociacaoExisente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from '../services/HttpService';\r\nimport {Negociacao} from '../models/Negociacao';\r\nimport {ConnectionFactory} from '../services/ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\n\r\nexport class NegociacaoService {\r\n\r\n\r\n    constructor() {\r\n        this._http = new HttpService();\r\n    }\r\n\r\n    obterNegociacoesDaSemana() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/semana')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto =>\r\n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\r\n                    ))\r\n                })\r\n                .catch(erro => reject(\"Não foi possível obter as negociacoes da semana\"));\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaAnterior() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/anterior')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto =>\r\n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\r\n                    ))\r\n                })\r\n                .catch(erro => reject(\"Não foi possível obter as negociacoes da semana anterior\"));\r\n        });\r\n    }\r\n\r\n    obterNegociacoesDaSemanaRetrasada() {\r\n\r\n        return new Promise((resolve, reject) => {\r\n\r\n            this._http\r\n                .get('negociacoes/retrasada')\r\n                .then(negociacoes => {\r\n                    resolve(negociacoes.map(objeto =>\r\n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor)\r\n                    ))\r\n                })\r\n                .catch(erro => reject(\"Não foi possível obter as negociacoes da semana retrasada\"));\r\n        });\r\n    }\r\n\r\n\r\n    obterNegociacoes() {\r\n\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => dados.concat(periodo), [])\r\n                .map(dado => new Negociacao(new Date(dado.data), dado.quantidade, dado.valor));\r\n\r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            console.log(erro);\r\n            throw new Error(erro);\r\n        });\r\n    }\r\n\r\n    cadastra(negociacao) {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => 'Negociacao adicionada com sucesso')\r\n            .catch(() => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível adicionar a negociação\")\r\n            })\r\n    }\r\n\r\n    lista() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listarTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível listar as negociações\")\r\n            });\r\n    }\r\n\r\n    apagaTodos() {\r\n\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagarTodos())\r\n            .then(() => \"Negociações apagadas com sucesso\")\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível apagar as negociações\")\r\n            })\r\n    }\r\n\r\n    importa(listaAtual) {\r\n\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes =>\r\n                negociacoes.filter(negociacao =>\r\n                    !listaAtual.some(negociacaoExisente =>\r\n                        JSON.stringify(negociacaoExisente) == JSON.stringify(negociacao)))\r\n            )\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível buscar as negociações para importar\");\r\n            });\r\n    }\r\n}"]}